{"ast":null,"code":"import api from \"./api\";\nimport TokenService from \"./tokenService\"; // import axios from \"axios\";\n// const API_URL = \"http://localhost:5000/auth\";\n\nconst signup = (email, password) => {\n  return api.post(\"/auth/signup\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      // localStorage.setItem(\"user\", JSON.stringify(response.data));\n      TokenService.setUser(response.data);\n    }\n\n    return response.data;\n  });\n};\n\nconst login = (email, password) => {\n  return api.post(\"/auth/login\", {\n    email,\n    password\n  }).then(response => {\n    if (response.data.accessToken) {\n      // localStorage.setItem(\"user\", JSON.stringify(response.data));\n      TokenService.setUser(response.data);\n    }\n\n    return response.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst authService = {\n  signup,\n  login,\n  logout,\n  getCurrentUser\n};\nexport default authService;","map":{"version":3,"names":["api","TokenService","signup","email","password","post","then","response","data","accessToken","setUser","login","logout","localStorage","removeItem","getCurrentUser","JSON","parse","getItem","authService"],"sources":["/home/dell/Desktop/Theo/REACT JS/jwt/frontend/src/services/authService.js"],"sourcesContent":["import api from \"./api\";\nimport TokenService from \"./tokenService\";\n\n// import axios from \"axios\";\n\n// const API_URL = \"http://localhost:5000/auth\";\n\nconst signup = (email, password) => {\n  return api\n    .post(\"/auth/signup\", {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        // localStorage.setItem(\"user\", JSON.stringify(response.data));\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n};\n\nconst login = (email, password) => {\n  return api\n    .post(\"/auth/login\", {\n      email,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        // localStorage.setItem(\"user\", JSON.stringify(response.data));\n        TokenService.setUser(response.data);\n      }\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst authService = {\n  signup,\n  login,\n  logout,\n  getCurrentUser,\n};\n\nexport default authService;\n"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,OAAhB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;AAEA;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EAClC,OAAOJ,GAAG,CACPK,IADI,CACC,cADD,EACiB;IACpBF,KADoB;IAEpBC;EAFoB,CADjB,EAKJE,IALI,CAKEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;MAC7B;MACAR,YAAY,CAACS,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;IACD;;IACD,OAAOD,QAAQ,CAACC,IAAhB;EACD,CAXI,CAAP;AAYD,CAbD;;AAeA,MAAMG,KAAK,GAAG,CAACR,KAAD,EAAQC,QAAR,KAAqB;EACjC,OAAOJ,GAAG,CACPK,IADI,CACC,aADD,EACgB;IACnBF,KADmB;IAEnBC;EAFmB,CADhB,EAKJE,IALI,CAKEC,QAAD,IAAc;IAClB,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;MAC7B;MACAR,YAAY,CAACS,OAAb,CAAqBH,QAAQ,CAACC,IAA9B;IACD;;IACD,OAAOD,QAAQ,CAACC,IAAhB;EACD,CAXI,CAAP;AAYD,CAbD;;AAeA,MAAMI,MAAM,GAAG,MAAM;EACnBC,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,cAAc,GAAG,MAAM;EAC3B,OAAOC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;EAClBjB,MADkB;EAElBS,KAFkB;EAGlBC,MAHkB;EAIlBG;AAJkB,CAApB;AAOA,eAAeI,WAAf"},"metadata":{},"sourceType":"module"}