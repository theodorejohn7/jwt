{"ast":null,"code":"import axios from \"axios\";\nimport TokenService from \"./tokenService\";\nimport authService from \"./authService\";\nimport { useNavigate } from \"react-router-dom\";\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000\",\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n});\ninstance.interceptors.request.use(config => {\n  const token = TokenService.getLocalAccessToken();\n\n  if (token) {\n    config.headers[\"x-auth-token\"] = token;\n  }\n\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\ninstance.interceptors.response.use(res => {\n  return res;\n}, async error => {\n  const originalConfig = error.config;\n\n  if (error.response) {\n    if (error.response.status === 403 && !originalConfig._retry) {\n      originalConfig._retry = true;\n\n      try {\n        const res = await instance.post(\"/auth/token\", {\n          refreshToken: TokenService.getLocalRefreshToken()\n        });\n        console.log(\"response\", res);\n        const {\n          accessToken\n        } = res.data;\n        console.log(\"updatedNewAccessToken\", accessToken);\n        TokenService.updateNewAccessToken(accessToken);\n        return instance(originalConfig);\n      } catch (error1) {\n        return Promise.reject(error1);\n      }\n    } //refresh token expired\n\n\n    if (error.response.status === 401 && !originalConfig._retry) {\n      originalConfig._retry = true;\n\n      try {\n        const rs = await refreshToken();\n        const {\n          accessToken\n        } = rs.data;\n        window.localStorage.setItem(\"accessToken\", accessToken);\n        instance.defaults.headers.common[\"x-access-token\"] = accessToken;\n        return instance(originalConfig);\n      } catch (_error2) {\n        if (_error2.response && _error2.response.data) {\n          return Promise.reject(_error2.response.data);\n        }\n\n        return Promise.reject(_error2);\n      }\n    }\n\n    if (error.response.status === 403 && error.response.data) {\n      return Promise.reject(error.response.data);\n    } /////////////////////\n\n  }\n\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","TokenService","authService","useNavigate","instance","create","baseURL","headers","interceptors","request","use","config","token","getLocalAccessToken","error","Promise","reject","response","res","originalConfig","status","_retry","post","refreshToken","getLocalRefreshToken","console","log","accessToken","data","updateNewAccessToken","error1","rs","window","localStorage","setItem","defaults","common","_error2"],"sources":["/home/dell/Desktop/Theo/REACT JS/jwt/frontend/src/services/api.js"],"sourcesContent":["import axios from \"axios\";\nimport TokenService from \"./tokenService\";\nimport authService from \"./authService\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nconst instance = axios.create({\n  baseURL: \"http://localhost:5000\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n});\n\ninstance.interceptors.request.use(\n  (config) => {\n    const token = TokenService.getLocalAccessToken();\n    if (token) {\n      config.headers[\"x-auth-token\"] = token;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\ninstance.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  async (error) => {\n    const originalConfig = error.config;\n    if (error.response) {\n     \n        if (error.response.status === 403 && !originalConfig._retry) {\n        originalConfig._retry = true;\n        try {\n          const res = await instance.post(\"/auth/token\", {\n            refreshToken: TokenService.getLocalRefreshToken(),\n          });\n          console.log(\"response\", res);\n          const { accessToken } = res.data;\n          console.log(\"updatedNewAccessToken\", accessToken);\n          TokenService.updateNewAccessToken(accessToken);\n\n          return instance(originalConfig);\n        } catch (error1) {\n          return Promise.reject(error1);\n        }\n      }\n\n\n     //refresh token expired\n\n     if (error.response.status === 401 && !originalConfig._retry) {\n        originalConfig._retry = true;\n        try {\n          const rs = await refreshToken();\n          const { accessToken } = rs.data;\n          window.localStorage.setItem(\"accessToken\", accessToken);\n          instance.defaults.headers.common[\"x-access-token\"] = accessToken;\n          return instance(originalConfig);\n        } catch (_error2) {\n          if (_error2.response && _error2.response.data) {\n            return Promise.reject(_error2.response.data);\n          }\n          return Promise.reject(_error2);\n        }\n      }\n      if (error.response.status === 403 && error.response.data) {\n        return Promise.reject(error.response.data);\n      }\n    \n\n\n     /////////////////////\n\n\n    }\n    return Promise.reject(error);\n  }\n);\nexport default instance;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}